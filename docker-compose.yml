version: '3'
services:
  nginx:
    build: ./nginx
    ports:
      - 8020:80
    volumes:
      - static_root:/opt/app/ecommerce/static_root
    depends_on:
      - web
    restart: "on-failure"
  web:
    build: . #build the image for the web service from the dockerfile in parent directory
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py collectstatic --noinput &&
                    gunicorn demo.wsgi:application --bind 0.0.0.0:8081"
    volumes:
      - .:/ecommerce:rw # map data and files from parent directory in host to microservice directory in docker containe
      - static_root:/opt/app/ecommerce/static_root
    image: ecommerceapp

    expose:
      - 8081
    restart: "on-failure"
    depends_on:
      - db
  db:
    image: postgres:11-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PASSWORD=utrainsdb
      - POSTGRES_DB=website
      - PGPORT=5432
      - POSTGRES_USER=webuser
    restart: "on-failure"

volumes:
  postgres_data:
  static_root:
